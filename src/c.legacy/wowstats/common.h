/*
 * common.h
 *
 * Copyright (C) 2008 - 2011 by Joshua S. English. This document is the
 * intellectual property of Joshua S. English, all rights reserved.
 *
 * The Asgard-WoW Statistical Analysis common header file.
 *
 * Written by Josh English.
 */

#if !defined(_WOWSTATS_COMMON_H)

#define _WOWSTATS_COMMON_H

#if defined(__cplusplus)
extern "C" {
#endif // __cplusplus

// define wowstats common public constants

// events

#define EVENT_UNIT_TYPE_BITMASK					0x00F0000000000000

#define EVENT_UNIT_TYPE_PLAYER_MASK				0x0000000000000000

#define EVENT_UNIT_TYPE_NPC_MASK				0x0030000000000000

#define EVENT_UNIT_TYPE_PET_MASK				0x0040000000000000

#define EVENT_UNIT_TYPE_VEHICLE_MASK			0x0050000000000000

#define TRIGGER_MAX_BOSS_LENGTH					32

// define wowstats common public data types

// events

typedef enum _WowEventListId {
	WOW_EVENT_DAMAGE_SHIELD = 1,
	WOW_EVENT_DAMAGE_SHIELD_MISSED,
	WOW_EVENT_DAMAGE_SPLIT,
	WOW_EVENT_ENCHANT_APPLIED,
	WOW_EVENT_ENCHANT_REMOVED,
	WOW_EVENT_PARTY_KILL,
	WOW_EVENT_UNIT_DIED,
	WOW_EVENT_UNIT_DESTROYED,
	WOW_EVENT_ENVIRONMENTAL_DAMAGE,
	WOW_EVENT_RANGE_DAMAGE,
	WOW_EVENT_RANGE_MISSED,
	WOW_EVENT_SPELL_AURA_APPLIED,
	WOW_EVENT_SPELL_AURA_APPLIED_DOSE,
	WOW_EVENT_SPELL_AURA_BROKEN,
	WOW_EVENT_SPELL_AURA_BROKEN_SPELL,
	WOW_EVENT_SPELL_AURA_REFRESH,
	WOW_EVENT_SPELL_AURA_REMOVED,
	WOW_EVENT_SPELL_AURA_REMOVED_DOSE,
	WOW_EVENT_SPELL_CAST_FAILED,
	WOW_EVENT_SPELL_CAST_START,
	WOW_EVENT_SPELL_CAST_SUCCESS,
	WOW_EVENT_SPELL_CREATE,
	WOW_EVENT_SPELL_DAMAGE,
	WOW_EVENT_SPELL_DISPEL,
	WOW_EVENT_SPELL_DISPEL_FAILED,
	WOW_EVENT_SPELL_ENERGIZE,
	WOW_EVENT_SPELL_EXTRA_ATTACKS,
	WOW_EVENT_SPELL_HEAL,
	WOW_EVENT_SPELL_INSTAKILL,
	WOW_EVENT_SPELL_INTERRUPT,
	WOW_EVENT_SPELL_LEECH,
	WOW_EVENT_SPELL_MISSED,
	WOW_EVENT_SPELL_RESURRECT,
	WOW_EVENT_SPELL_STOLEN,
	WOW_EVENT_SPELL_SUMMON,
	WOW_EVENT_SPELL_PERIODIC_DAMAGE,
	WOW_EVENT_SPELL_PERIODIC_ENERGIZE,
	WOW_EVENT_SPELL_PERIODIC_HEAL,
	WOW_EVENT_SPELL_PERIODIC_MISSED,
	WOW_EVENT_SWING_DAMAGE,
	WOW_EVENT_SWING_MISSED,
	WOW_EVENT_END_OF_LIST = -2
} WowEventListId;

typedef struct _WowEventList {
	int id;
	char *name;
	int nameLength;
	char *description;
} WowEventList;


// spell schools

typedef enum _WowSpellSchoolId {
	WOW_SPELL_SCHOOL_PHYSICAL = 1,
	WOW_SPELL_SCHOOL_HOLY,
	WOW_SPELL_SCHOOL_FIRE,
	WOW_SPELL_SCHOOL_NATURE,
	WOW_SPELL_SCHOOL_FROST,
	WOW_SPELL_SCHOOL_FROSTFIRE,
	WOW_SPELL_SCHOOL_FROSTSTORM,
	WOW_SPELL_SCHOOL_SHADOW,
	WOW_SPELL_SCHOOL_SHADOWSTORM,
	WOW_SPELL_SCHOOL_ARCANE,
	WOW_SPELL_SCHOOL_END_OF_LIST = -1
} WowSpellSchoolId;

typedef struct _WowSpellSchool {
	int id;
	char *code;
	int codeLength;
	char *name;
	char *description;
} WowSpellSchool;


// power types

typedef enum _WowPowerTypeId {
	WOW_POWER_TYPE_HEALTH = 1,
	WOW_POWER_TYPE_MANA,
	WOW_POWER_TYPE_RAGE,
	WOW_POWER_TYPE_FOCUS,
	WOW_POWER_TYPE_ENERGY,
	WOW_POWER_TYPE_PET_HAPPINESS,
	WOW_POWER_TYPE_RUNES,
	WOW_POWER_TYPE_RUNIC_POWER,
	WOW_POWER_TYPE_END_OF_LIST = -1
} WowPowerTypeId;

typedef struct _WowPowerType {
	int id;
	int code;
	char *name;
	char *description;
} WowPowerType;


// player class

typedef enum _WowPlayerClassListId {
	WOW_PLAYER_CLASS_UNKNOWN = -1,
	WOW_PLAYER_CLASS_WARRIOR = 1,
	WOW_PLAYER_CLASS_DRUID,
	WOW_PLAYER_CLASS_WARLOCK,
	WOW_PLAYER_CLASS_SHAMAN,
	WOW_PLAYER_CLASS_PALADIN,
	WOW_PLAYER_CLASS_PRIEST,
	WOW_PLAYER_CLASS_ROGUE,
	WOW_PLAYER_CLASS_MAGE,
	WOW_PLAYER_CLASS_HUNTER,
	WOW_PLAYER_CLASS_DEATHKNIGHT,
	WOW_PLAYER_CLASS_NPC,
	WOW_PLAYER_CLASS_PET,
	WOW_PLAYER_CLASS_ENVIRONMENT,
	WOW_PLAYER_CLASS_VEHICLE,
	WOW_PLAYER_CLASS_END_OF_LIST = -2
} WowPlayerClassListId;

typedef struct _WowPlayerClassList {
	int id;
	char *name;
} WowPlayerClassList;


// spells

typedef struct _WowSpellList {
	int id;
	char *playerClass;
	char *name;
	int rank;
} WowSpellList;


// summaries

typedef enum _WowSummaryListId {
	WOW_SUMMARY_HEALING = 1,
	WOW_SUMMARY_DAMAGE,
	WOW_SUMMARY_ENCHANT,
	WOW_SUMMARY_DEATH,
	WOW_SUMMARY_MISSED,
	WOW_SUMMARY_AURA,
	WOW_SUMMARY_DECURS,
	WOW_SUMMARY_SPELL_CASTING,
	WOW_SUMMARY_ENERGIZE,
	WOW_SUMMARY_INTERRUPT,
	WOW_SUMMARY_STOLEN,
	WOW_SUMMARY_END_OF_LIST = -1
} WowSummaryListId;

typedef struct _WowSummaryList {
	int id;
	char *name;
	char *description;
} WowSummaryList;


// triggers

typedef enum _WowTriggerResultCodes {
	WOW_TRIGGER_RESULT_OK = 0,
	WOW_TRIGGER_RESULT_NEW_BOSS,
	WOW_TRIGGER_RESULT_END_BOSS,
	WOW_TRIGGER_RESULT_NEW_AND_END_BOSS,
	WOW_TRIGGER_RESULT_END_LOG,
	WOW_TRIGGER_RESULT_ERROR = -1
} WowTriggerResultCodes;

typedef enum _WowTriggerListId {
	WOW_TRIGGER_BOSS_SARTHARION = 1,
	WOW_TRIGGER_BOSS_VESPERON,
	WOW_TRIGGER_BOSS_TENEBRON,
	WOW_TRIGGER_BOSS_SHADRON,
	WOW_TRIGGER_BOSS_ANUBREKHAN,
	WOW_TRIGGER_BOSS_FAERLINA,
	WOW_TRIGGER_BOSS_MAEXXNA,
	WOW_TRIGGER_BOSS_RAZUVIOUS,
	WOW_TRIGGER_BOSS_GOTHIK,
	WOW_TRIGGER_BOSS_FOURHORSEMEN,
	WOW_TRIGGER_BOSS_PATCHWERK,
	WOW_TRIGGER_BOSS_GROBBULUS,
	WOW_TRIGGER_BOSS_GLUTH,
	WOW_TRIGGER_BOSS_THADDIUS,
	WOW_TRIGGER_BOSS_NOTH,
	WOW_TRIGGER_BOSS_HEIGAN,
	WOW_TRIGGER_BOSS_LOATHEB,
	WOW_TRIGGER_BOSS_SAPPHIRON,
	WOW_TRIGGER_BOSS_KELTHUZAD,
	WOW_TRIGGER_BOSS_MALYGOS,
	WOW_TRIGGER_BOSS_ARCHAVON,
	WOW_TRIGGER_BOSS_FLAMELEVIATHAN,
	WOW_TRIGGER_BOSS_IGNIS,
	WOW_TRIGGER_BOSS_RAZORSCALE,
	WOW_TRIGGER_BOSS_XT002,
	WOW_TRIGGER_BOSS_IRONCOUNCIL,
	WOW_TRIGGER_BOSS_KOLOGARN,
	WOW_TRIGGER_BOSS_AURIAYA,
	WOW_TRIGGER_BOSS_HODIR,
	WOW_TRIGGER_BOSS_THORIM,
	WOW_TRIGGER_BOSS_FREYA,
	WOW_TRIGGER_BOSS_MIMIRON,
	WOW_TRIGGER_BOSS_VEZAX,
	WOW_TRIGGER_BOSS_YOGGSARON,
	WOW_TRIGGER_BOSS_ALGALON,
	WOW_TRIGGER_END_OF_LIST = -1
} WowTriggerListId;

typedef struct _WowTriggerList {
	int id;
	char *zone;
	int bossId;
	char *bossName;
	int startTrashList[TRIGGER_MAX_BOSS_LENGTH];
	int startList[TRIGGER_MAX_BOSS_LENGTH];
	int childBossList[TRIGGER_MAX_BOSS_LENGTH];
	int endList[TRIGGER_MAX_BOSS_LENGTH];
	int timeout;
} WowTriggerList;


#if defined(__cplusplus)
};
#endif // __cplusplus

#endif // _WOWSTATS_COMMON_H

